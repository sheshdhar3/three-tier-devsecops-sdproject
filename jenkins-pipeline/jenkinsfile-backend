pipeline {
    agent any 
    environment  {
        SONAR_HOME = tool "Sonar"
    }
    stages {
       
        
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/sheshdhar3/three-tier-devsecops-sdproject.git'
            }
        }
    
        stage('Sonarqube Analysis') {
            
                steps{
                withSonarQubeEnv("Sonar"){
                sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=PQRbackend -Dsonar.projectKey=PQRBackend"
                    }
                }
            }
        
        stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false
                }
            }
        }
        stage('OWASP Dependency-Check Scan') {
            steps {
                dir('app-code/backend') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('app-code/backend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Docker Image Build") {  
            steps {
                script {
                    dir('app-code/backend') {
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t backend-app:shesh .'
                            sh echo 'Docker image build successfully'
                    }
                }
            }
        }
        stage("TRIVY Image Scan") {
            steps {
                sh 'trivy image backend-app:shesh > trivyimage.txt' 
            }
        }

        stage("Docker Image Pushing") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId:"Dockerhubcreds",passwordVariable:"dockerPassword",usernameVariable:"dockerUser")]){
                    sh "docker login -u ${env.dockerUser} -p ${env.dockerPassword}"
                    sh "docker tag backend-app:shesh ${env.dockerUser}/backend-app:shesh"
                    sh "docker push ${env.dockerUser}/backend-app:shesh"
                    echo "Image pushed on dockerhub repository"
                    }
                }
            }
        }
        
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sheshdhar3/three-tier-devsecops-sdproject.git'
            }
        }
        stage('Deployment of Backend apps') {
            steps {
                 sh 'docker run --name backendapp-shesh -p 8001:8000 -d backend-app:shesh'
                 echo "Deployment done"
                 }
        }
     }
}
